/*
========================================
PROJECT DEUS :: Final Style Definition
========================================
*/

@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&family=Roboto+Mono:wght@400;500&display=swap');

:root {
    /* Color Palette */
    --bg-deep-space: #010413;
    --bg-panel: rgba(10, 25, 47, 0.65);
    --bg-input: rgba(2, 4, 24, 0.85);
    --text-primary: #f0f8ff;
    --text-secondary: #8a99b5;
    --accent-cyan: #00f6ff;
    --accent-magenta: #ff00c1;
    --border-color: rgba(0, 246, 255, 0.25);
    --error-color: #ff5252;
    --shadow-color-cyan: rgba(0, 246, 255, 0.2);
    --shadow-color-magenta: rgba(255, 0, 193, 0.2);

    /* Fonts */
    --font-main: 'Inter', sans-serif;
    --font-mono: 'Roboto Mono', monospace;
}

/* --- Base & Animations --- */
* { margin: 0; padding: 0; box-sizing: border-box; }
html { scroll-behavior: smooth; }

body {
    font-family: var(--font-main);
    background-color: var(--bg-deep-space);
    color: var(--text-primary);
    line-height: 1.6;
    overflow-x: hidden;
    animation: fadeIn 1.5s ease-in-out;
}
body::before { /* Scanlines Overlay */
    content: ""; position: fixed; top: 0; left: 0; width: 100%; height: 100%;
    background-image: linear-gradient(rgba(255,255,255,0.02) 1px, transparent 1px);
    background-size: 1px 3px; z-index: -1; pointer-events: none;
}

@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }

/* --- Header & Nav --- */
.main-header { /* (以前の定義に加え) */
    position: sticky; top: 0;
    animation: slideDown 0.8s ease-out;
}
@keyframes slideDown { from { transform: translateY(-100%); } to { transform: translateY(0); } }
.main-header nav a:hover { transform: scale(1.05); }

/* --- Panels (Breathing Effect) --- */
.panel {
    background-color: var(--bg-panel);
    border: 1px solid var(--border-color);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 0 15px var(--shadow-color-cyan), inset 0 0 10px rgba(0,0,0,0.5);
    backdrop-filter: blur(12px); -webkit-backdrop-filter: blur(12px);
    animation: panel-load-in 0.6s ease-out forwards, panel-breathe 8s ease-in-out infinite alternate;
    opacity: 0;
}
@keyframes panel-load-in {
    from { opacity: 0; transform: translateY(30px) scale(0.98); }
    to { opacity: 1; transform: translateY(0) scale(1); }
}
@keyframes panel-breathe {
    from { box-shadow: 0 0 15px var(--shadow-color-cyan), inset 0 0 10px rgba(0,0,0,0.5); }
    to { box-shadow: 0 0 25px var(--shadow-color-magenta), inset 0 0 10px rgba(0,0,0,0.5); }
}

/* --- Hexagonal Input Styling --- */
.matrix-grid-container input {
    width: 100%; height: 55px; text-align: center; font-family: var(--font-mono);
    font-size: 1.2rem; background-color: var(--bg-input); border: none;
    color: var(--text-primary);
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    transition: all 0.3s ease;
    padding: 0 15%;
}
.matrix-grid-container input:focus {
    outline: none; background-color: rgba(0, 246, 255, 0.1);
    transform: scale(1.05);
}

/* --- Buttons (Data Flow Effect) --- */
.op-btn {
    position: relative; overflow: hidden;
    background-color: transparent; border: 1px solid var(--border-color);
    color: var(--text-primary); width: 100%;
}
.op-btn::before { /* Data flow animation element */
    content: ''; position: absolute; top: 0; left: -100%; width: 100%; height: 100%;
    background: linear-gradient(90deg, transparent, var(--accent-cyan), transparent);
    transition: left 0.4s ease;
}
.op-btn:hover::before { left: 100%; }
.op-btn:hover {
    color: var(--bg-deep-space); background-color: var(--accent-cyan);
    box-shadow: 0 0 20px var(--accent-cyan);
    transform: translateY(-3px);
}

/* --- Result Area (Glitch Effect) --- */
.result-display-container.glitch-in {
    animation: glitch 0.4s steps(2, end);
}
@keyframes glitch {
    0% { transform: translate(0); text-shadow: 0 0 5px var(--accent-cyan); }
    25% { transform: translate(3px, -2px); text-shadow: 0 0 10px var(--accent-magenta); color: var(--accent-magenta); }
    50% { transform: translate(-2px, 3px); text-shadow: 0 0 15px var(--accent-cyan); color: var(--accent-cyan); }
    75% { transform: translate(2px, 2px); }
    100% { transform: translate(0); }
}

/* (他の要素のスタイルも微調整) */
/* ... existing responsive styles and other page specific styles ... */
